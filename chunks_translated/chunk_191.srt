866
01:04:04,730 --> 01:04:14,780
这基本上就是计算机中发生的事情，例如，

867
01:04:14,780 --> 01:04:20,490
max 函数以两个整数为参数并返回两者

868
01:04:20,490 --> 01:04:25,369
之间的最大值。现在，对于此函数，如果您没

869
01:04:25,369 --> 01:04:29,670
有输入两个数字或变量供其比较，它将抛出

870
01:04:29,670 --> 01:04:33,610
一个错误，就像五个人的员工一样，他不知道

871
01:04:33,610 --> 01:04:37,260
你想吃什么，因为你没有向他提供任何参数，而计算机也不知道你想让它比较和返回哪两

872
01:04:37,260 --> 01:04:42,720
个数字，因为你没有向它提供两个整数。参数

873
01:04:42,720 --> 01:04:47,730
是程序员拥有一个函数的一种方式，该函数可

874
01:04:47,730 --> 01:04:52,330
以根据可以传递的变量执行许多不同的操作。参数增加了编程的可变性，并有助于使代码

875
01:04:52,330 --> 01:04:56,510
多样化。回想一下我们五个人的例子，一家餐厅只允许制作一种食物，而不管你点什么，

876
01:04:56,510 --> 01:05:01,780
这都不会非常有用或多样化，但如果我们能够传递参数并告诉他们我们想要什么食物，我

877
01:05:01,780 --> 01:05:06,310
们的体验就会得到提升，并且有更多的选择，

878
01:05:06,310 --> 01:05:12,530
这正是您在函数中接受参数时所发生的事情。

