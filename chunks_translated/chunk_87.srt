375
00:28:02,009 --> 00:28:06,700
来更新你的年龄。你所要做的就是引用变量，

376
00:28:06,700 --> 00:28:12,049
并将其设置为你想要变量保存的任何新整数，

377
00:28:12,049 --> 00:28:16,320
在本例中为

378
00:28:16,320 --> 00:28:22,139
18。这相当于有一个标有年龄的盒子，里面有一张写着

379
00:28:22,139 --> 00:28:27,129
17 的纸，然后取出那张纸，擦除 17，

380
00:28:27,129 --> 00:28:31,850
用 18 替换，然后放回盒子里。这样做，我们能够随着事物的动态变

381
00:28:31,850 --> 00:28:38,640
化，在整个代码中轻松更新变量的内容。再举一个例子，如果你正在制作

382
00:28:38,640 --> 00:28:42,590


383
00:28:42,590 --> 00:28:46,350
RPG，你的角色可能会有攻击、防御、法力等属性。随着游戏的进展，

384
00:28:46,350 --> 00:28:50,590
你可以不断更新变量，这样玩家在游戏中越走越远，就越强大，而你不必

385
00:28:50,590 --> 00:28:55,080
创建新的变量。你只需要不断地从你的存储设施中取出那个盒子，擦除并

386
00:28:55,080 --> 00:28:59,359
替换纸上的数字，然后继续你的代码

387
00:28:59,359 --> 00:29:04,210
。请记住，这些变量只不过是内存中存

388
00:29:04,210 --> 00:29:09,369
储特定值的位置，因此我们可以轻松更新数字，并且它们的位置将保持不

389
00:29:09,369 --> 00:29:13,509
变。代码运行完毕后，内存中的位置将被删除，直到您再次运行代码并且程

390
00:29:13,509 --> 00:29:18,729
序再次为变量分配空间。每次运行代码时，您都会在存储设施中创建新的

391
00:29:18,729 --> 00:29:23,840
盒子，并且在代码结束时，您会销毁所有盒子以便下次为新盒子腾出空间。

