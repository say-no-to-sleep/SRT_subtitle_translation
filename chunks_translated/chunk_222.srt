1008
01:15:16,340 --> 01:15:23,730
好吧，一般来说，对于创建函数，每种语言都会区分如何告诉计算机它是一个函数。

1009
01:15:23,730 --> 01:15:29,340
在 Java 中，你必须定义函数范围，除非你打算更多地研究

1010
01:15:29,340 --> 01:15:32,780
Java，否则你实际上不需要知道这一点，但基本上它会告诉计算

1011
01:15:32,780 --> 01:15:38,130
机哪些部分的代码可以使用该函数，哪些类型不能使用。对于本系列，

1012
01:15:38,130 --> 01:15:43,790
我们所有的函数都将是公共的。然后，你再从那里确定它是哪种类型

1013
01:15:43,790 --> 01:15:48,230
的函数，所以在这种情况下，由于它不会返回任何变量，我们只需放置

1014
01:15:48,230 --> 01:15:52,481
void

1015
01:15:52,481 --> 01:15:57,820
来表示这种类型的函数不会返回任何内容。最后，将函数名称放在这两个标识符

1016
01:15:57,820 --> 01:16:02,380
后面，并在其后加上一组括号，如下所示。如果你要创建一个接受参数的函数，

1017
01:16:02,380 --> 01:16:06,630
那么括号就是你的参数所在的位置，但是由于对于我们的第一种类型的函数，我

1018
01:16:06,630 --> 01:16:11,050
们不会将参数合并到这个函数中，所以我们就把它留空吧。所有这些都仅适用于

1019
01:16:11,050 --> 01:16:17,710
Java；另一方面，在 Python 中，你只需输入 def（define

1020
01:16:17,710 --> 01:16:23,420


1021
01:16:23,420 --> 01:16:29,000
的缩写），然后输入带有括号的函数名称。如你所见，每种语言都会有所不同，但我

1022
01:16:29,000 --> 01:16:34,420
们要记住的主要事情是始终添加括号。从那里，我们只需在函数范围内输入我们希望

1023
01:16:34,420 --> 01:16:38,700
void

1024
01:16:38,700 --> 01:16:42,400
函数执行的操作，然后关闭循环，我们就完成了，轻而易举。

1025
01:16:42,400 --> 01:16:47,980
在 Java 中，循环的范围是花括号内包含的任何内容，

1026
01:16:47,980 --> 01:16:51,520
而在 python

1027
01:16:51,520 --> 01:16:56,420
中，它将一直持续到不再缩进为止。从本质上讲，这是我们刚刚创建的最原始的函数类型。它不接受任何参数，也不返回任何值，

1028
01:16:56,420 --> 01:16:58,370
与之前的 printStats 函数非常相似。

