1127
01:24:48,840 --> 01:24:52,739
现在，当我们谈论字典时，我们指的并不是你家里可能有

1128
01:24:52,739 --> 01:24:57,739
的那本厚书，里面有成千上万

1129
01:24:57,739 --> 01:25:02,340
个定义。在计算机科学中，字

1130
01:25:02,340 --> 01:25:06,360
典就像数组，它们存储多个值，但它们的值的存储方式非常

1131
01:25:06,360 --> 01:25:10,981
不同。每个值不是通过它们在字典中的位置线性引用，而是

1132
01:25:10,981 --> 01:25:15,250
与用于引用它的另一个值或它的“键”相关联。因此，我们

1133
01:25:15,250 --> 01:25:21,469
需要抛弃所有将字典视为线性数据查看方式的概念，因为实

1134
01:25:21,469 --> 01:25:26,590
际上它更加流畅和可互换。基本上，我们说字典中的每个位

1135
01:25:26,590 --> 01:25:31,190
置都包含一个键/值对。引用字典中的值时，您将使用它的

1136
01:25:31,190 --> 01:25:36,060
唯一键，字典将告诉您与之绑定的值。可以这样想，每次您

1137
01:25:36,060 --> 01:25:40,870
将一个项目添加到字典中时，您的计算机都会创建一个手工

1138
01:25:40,870 --> 01:25:46,390
制作的盒子来存储数据，还会定制一把镶有宝石的钥匙，独

1139
01:25:46,390 --> 01:25:51,550
一无二，世界上没有其他钥匙。这样，只有一个键可以进入

1140
01:25:51,550 --> 01:25:55,430
存储特定信息的盒子。由于每个键必须是唯一的，因此在字

1141
01:25:55,430 --> 01:26:00,739
典中重复使用键会导致抛出错误，因为两个完全相同的键会

1142
01:26:00,739 --> 01:26:05,860
让计算机无法判断该键指向哪个盒子或信息位。但是，您可

1143
01:26:05,860 --> 01:26:08,400
以将相同的值存储在多个键/值对中，因为键都是不同的。

